# 工作流名称
name: Deploy Hugo site to Pages

# 触发器：在推送到 main 分支时运行，或手动触发
on:
  push:
    branches:
      - main # 确保这里是你的主要分支名称
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限
permissions:
  contents: read
  pages: write
  id-token: write

# 取消正在进行中的部署，只保留最新的
concurrency:
  group: "pages"
  cancel-in-progress: false

# 定义要执行的任务 (Jobs)
jobs:
  # 构建任务
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # 确保获取了所有历史记录和子模块（如果使用主题子模块）
          submodules: true
          fetch-depth: 0

      # 缓存模块以加速构建
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest' # 使用最新版本的 Hugo
          extended: true # 如果使用 Sass/SCSS, 需要 extended 版本

      # 安装依赖 (如果你的主题需要 npm/yarn/pnpm)
      # - name: Install Dependencies
      #   run: npm install

      # 构建 Hugo 网站
      - name: Build site
        run: hugo --minify
        # 如果你部署到项目页面 (URL 路径非根目录),
        # 你可能需要添加 baseURL 参数, 例如:
        # run: hugo --minify --baseURL "/your-repo-name/"

      # 上传构建产物 (public 目录) 作为 artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public # Hugo 默认的生成目录

  # 部署任务 (依赖于构建任务)
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # 依赖 'build' 任务成功完成
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # 官方推荐的部署 Action
